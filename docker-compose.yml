version: '3.8'

services:
  mcp-resume-server:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: mcp-resume-server
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
      - LATEX_TIMEOUT=10
      - MAX_RESUME_SIZE_MB=5
      - MAX_REQUESTS_PER_MINUTE=30
    env_file:
      - .env
    volumes:
      # Mount source for development
      - ./src:/app/src
      - ./templates:/app/templates
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mcp-network

  # Production service configuration
  mcp-resume-server-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: mcp-resume-server-prod
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8000
      - LATEX_TIMEOUT=10
      - MAX_RESUME_SIZE_MB=5
      - MAX_REQUESTS_PER_MINUTE=60
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mcp-network
    profiles:
      - production

  # Optional: Redis for job queue scaling
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - mcp-network
    profiles:
      - scaling

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - mcp-resume-server
    restart: unless-stopped
    networks:
      - mcp-network
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16